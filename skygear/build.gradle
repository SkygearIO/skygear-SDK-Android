apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def skygearVersion = "git describe --abbrev=0 --tags".execute().text.trim()
def skygearFullVersion = "git describe --always --tags".execute().text.trim()

group = 'io.skygear'
version = skygearVersion

def bintrayUser = System.getenv('BINTRAY_USER')
def bintrayApiKey = System.getenv('BINTRAY_API_KEY')

if (project.rootProject.file('local.properties').exists()) {
    Properties localProperties = new Properties()
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintrayUser = localProperties.getProperty('bintrayUser', bintrayUser)
    bintrayApiKey = localProperties.getProperty('bintrayApiKey', bintrayApiKey)
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName skygearFullVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-base:9.8.0'
    compile 'com.google.android.gms:play-services-gcm:9.8.0'

    compile 'dev.dworks.libs:volleyplus:0.1.4'
    compile 'joda-time:joda-time:2.9.4'
    compile 'org.java-websocket:Java-WebSocket:1.3.0'

    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    androidTestCompile 'com.android.support:support-annotations:23.4.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    generateJavadocs.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

generateJavadocsJar.dependsOn generateJavadocs
artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'skygear-android'
        userOrg = 'skygeario'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SkygearIO/skygear-SDK-Android.git'
        publish = true
        version {
            name = skygearFullVersion
            desc = "Skygear Android SDK ${skygearVersion}"
            released  = new Date()
            vcsTag = skygearVersion
        }
    }
}

